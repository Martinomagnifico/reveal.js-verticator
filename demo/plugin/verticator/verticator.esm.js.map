{"version":3,"file":"verticator.esm.js","sources":["../../../src/plugin/js/consts.js","../../../src/plugin/js/helpers.js","../../../src/plugin/js/functions/swap-colors.js","../../../src/plugin/js/functions/setup-colors.js","../../../src/plugin/js/functions/find-theme-colors.js","../../../src/plugin/js/functions/activate-bullet.js","../../../src/plugin/js/functions/create-bullets.js","../../../src/plugin/js/functions/get-current-stack-sections.js","../../../src/plugin/js/functions/slide-appear.js","../../../src/plugin/js/plugin.js","../../../src/plugin/js/functions/scale-position.js","../../../src/plugin/js/functions/observe-states.js","../../../src/plugin/js/functions/change-verticator-color.js","../../../src/plugin/js/functions/click-bullet.js"],"sourcesContent":["export default {\n\tlightClass : `has-light-background`,\n\tdarkClass : `has-dark-background`,\n\tthemeColorVar : `--c-theme-color`,\n\tvertiColorVar : `--v-color`,\n\tforceColorVar : `--v-forcecolor`,\n\tactiveclass : 'active',\n\teventNames: ['ready', 'slidechanged']\n}\n","/**\n * Check if a given string is valid JSON.\n * @param {string} str - The string to be checked.\n * @returns {boolean} `true` if the string is valid JSON, otherwise `false`.\n */\nexport const isJSON = str => {\n\ttry {\n\t\treturn (JSON.parse(str) && !!str);\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\n/**\n * Convert a NodeList into an array based on provided selectors.\n * @param {Element} container - The root element to begin querying.\n * @param {string} selectors - A string containing one or more CSS selectors separated by commas.\n * @returns {Element[]} Array of elements that match the given selectors.\n */\nexport const selectionArray = (container, selectors) => {\n\tlet selections = container.querySelectorAll(selectors);\n\tlet selectionarray = Array.prototype.slice.call(selections);\n\treturn selectionarray;\n};\n\n/**\n * Check if an element has child nodes that are `SECTION` elements.\n * @param {Object} param0 - Object with childNodes property.\n * @param {NodeListOf<ChildNode>} param0.childNodes - List of child nodes of the element.\n * @returns {boolean} `true` if the element contains `SECTION` child nodes, otherwise `false`.\n */\nexport const isStack = ({childNodes}) => {\n\tlet isStack = false;\n\tfor (let i = 0; i < childNodes.length; i++) {\n\t\tif (childNodes[i].tagName == \"SECTION\") {\n\t\t\tisStack = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn isStack;\n};\n\n/**\n * Copy data attributes from a source element to a target element with an optional exception.\n * @param {Object} param0 - Object with attributes property.\n * @param {NamedNodeMap} param0.attributes - Map of attributes of the source element.\n * @param {Element} target - Target element to copy attributes to.\n * @param {string} [not] - Optional attribute name to exclude from copying.\n */\nexport const copyDataAttributes = ({attributes}, target, not) => {\n\t[...attributes].filter(({nodeName}) => nodeName.includes('data')).forEach(({nodeName, nodeValue}) => {\n\t\tif ((not && nodeName !== not) || !not) {\n\t\t\ttarget.setAttribute(nodeName, nodeValue);\n\t\t}\n\t});\n};\n\n/**\n * Check if the given item is an object and not an array.\n * @param {*} item - The item to be checked.\n * @returns {boolean} `true` if the item is an object and not an array, otherwise `false`.\n */\nexport const isObject = (item) => {\n\treturn (item && typeof item === 'object' && !Array.isArray(item));\n}\n\n/**\n * Deep merge multiple objects into a target object.\n * @param {Object} target - Target object to merge values into.\n * @param {...Object} sources - Source objects to merge from.\n * @returns {Object} The merged object.\n */\nexport const mergeDeep = (target, ...sources) => {\n\tif (!sources.length) return target;\n\tconst source = sources.shift();\n\n\tif (isObject(target) && isObject(source)) {\n\t\tfor (const key in source) {\n\t\t\tif (isObject(source[key])) {\n\t\t\t\tif (!target[key]) Object.assign(target, { [key]: {} });\n\t\t\t\tmergeDeep(target[key], source[key]);\n\t\t\t} else {\n\t\t\t\tObject.assign(target, { [key]: source[key] });\n\t\t\t}\n\t\t}\n\t}\n\treturn mergeDeep(target, ...sources);\n}\n\n/**\n * Resolves the given Promise immediately using setTimeout.\n * @param {Function} resolve - The resolve function of a Promise.\n * @returns {number} The ID value of the timer that is set.\n */\nexport const doneLoading = (resolve) => {\n\treturn setTimeout(resolve, 0);\n}\n\n\n/**\n * Converts a JavaScript object or a JSON-formatted string to a JSON string.\n *\n * @param {Object|string} str - The input string or object to be converted to a JSON string.\n * @returns {string} The JSON string.\n */\nexport const toJSONString = (str) => {\n\tlet JSONString = ''\n\n\tif (typeof str === \"string\") str = str.replace(/[“”]/g,'\"').replace(/[‘’]/g,\"'\");\n\n\tif (isJSON(str)) {\n\t\tJSONString = str\n\t} else {\n\t\tif (typeof str === \"object\") {\n\t\t\tJSONString = JSON.stringify(str, null, 2)\n\t\t} else {\n\t\t\tJSONString = str.trim().replace(/'/g, '\"').charAt(0) === \"{\" ? str.trim().replace(/'/g, '\"') : `{${str.trim().replace(/'/g, '\"')}}`;\n\t\t}\n\t}\n\treturn JSONString;\n}\n\n\n/**\n * Dynamically loads a resource from the specified URL and calls a callback function when it's loaded.\n * Will not load the resource if it has already been loaded.\n *\n * @param {string} url - The URL of the resource to load.\n * @param {string} type - The type of resource to load.\n * @param {Function} callback - A callback function to be called when the resource is loaded.\n */\n\nexport const loadResource = (url, type, callback) => {\n\tlet head = document.querySelector('head');\n\tlet resource;\n\tlet alreadyExists = false;\n\n\tif (type === 'script') {\n\t\tif (!document.querySelector(`script[src=\"${url}\"]`)) {\n\t\t\tresource = document.createElement('script');\n\t\t\tresource.type = 'text/javascript';\n\t\t\tresource.src = url;\n\t\t} else { alreadyExists = true }\n\n\t} else if (type === 'stylesheet') {\n\n\t\tif (!document.querySelector(`link[href=\"${url}\"]`)) {\n\t\t\tresource = document.createElement('link');\n\t\t\tresource.rel = 'stylesheet';\n\t\t\tresource.href = url;\n\t\t} else { alreadyExists = true }\n\t}\n\n\tif (!alreadyExists) {\n\t\tconst finish = () => {\n\t\t\tif (typeof callback === 'function') {\n\t\t\tcallback.call();\n\t\t\tcallback = null;\n\t\t\t}\n\t\t};\n\t\tresource.onload = finish;\n\t\tresource.onreadystatechange = function () {\n\t\t\tif (this.readyState === 'loaded') {\n\t\t\t\tfinish();\n\t\t\t}\n\t\t};\n\t\thead.appendChild(resource);\n\t}\n}\n\n\n/**\n * Retrieves the path of a JavaScript file based on its filename.\n *\n * @param {string} fileName - The filename of the script.\n * @returns {string} The path to the plugin's location.\n */\nexport const pluginPath = (fileName) => {\n\tlet path;\n\tlet pluginScript = document.querySelector(`script[src$=\"${fileName}\"]`);\n\tif (pluginScript) {\n\t\tpath = pluginScript.getAttribute(\"src\").slice(0, -1 * (fileName.length));\n\t} else {\n\t\tpath = import.meta.url.slice(0, import.meta.url.lastIndexOf('/') + 1);\n\t}\n\treturn path;\n}\n\n\n/**\n * Check if element 'a' appears before element 'b' in the DOM tree.\n *\n * @param {HTMLElement} a - The first HTML element to compare.\n * @param {HTMLElement} b - The second HTML element to compare.\n * @returns {boolean|undefined} - Returns `true` if element 'a' appears before element 'b', `false` if 'b' appears before 'a', and `undefined` if the elements have no relative position in the DOM tree.\n */\nexport const isBefore = (a, b) => {\n    var all = document.getElementsByTagName('*');\n\n    for (var i = 0; i < all.length; ++i) {\n        if (all[i] === a) {\n            return true;\n        } else if (all[i] === b) {\n            return false;\n        }\n    }\n    // If the elements have no relative position in the DOM tree\n    return undefined;\n};\n\n\n/**\n * Check the number of occurrences of a specific element in an array.\n *\n * @param {Array} array - The array in which occurrences are to be counted.\n * @param {*} element - The element to be counted within the array.\n * @returns {number} - The count of occurrences of the specified element in the array.\n */\nexport const checkOccurrence = (array, element) => {\n    let counter = 0;\n    for (let i = 0; i < array.length; i++) {\n        if (array[i] == element) {\n            counter++;\n        }\n    }\n    return counter;\n};\n\n\n/**\n * Create an HTML element from a string of HTML.\n *\n * @param {string} thehtml - The string of HTML to be converted into an HTML element.\n * @returns {HTMLElement | null} - The HTML element created from the provided HTML string. Returns `null` if the element couldn't be created.\n */\nexport const createNode = (thehtml) => {\n    const fragment = document.createRange().createContextualFragment(thehtml);\n    return fragment.firstElementChild;\n};\n\n\n/**\n * Gets the index of the given DOM element within its parent's children.\n * @param {HTMLElement} elm - The target element.\n * @returns {number} - The index of the element within its parent's children.\n */\nexport const getNodeIndex = (elm) => [...elm.parentNode.children].indexOf(elm);\n\n\nexport const debugLog = (options, text) => {\n\tif (options.debug) console.log(text);\n}\n\n","import consts from '../consts';\n\nexport const swapColors = ( needToSwap, options, colors, revealElement, theVerticator) => {\n\tif (needToSwap) {\n\t\trevealElement.style.setProperty(consts.themeColorVar, colors.themeinverse);\n\n\t\tif (options.inversecolor || options.oppositecolor) {\n\t\t\ttheVerticator.style.setProperty(consts.vertiColorVar, colors.verticatorinverse);\n\t\t} else {\n\t\t\ttheVerticator.style.removeProperty(consts.vertiColorVar);\n\t\t}\n\t} else {\n\t\trevealElement.style.setProperty(consts.themeColorVar, colors.themeregular);\n\n\t\tif (options.color) {\n\t\t\ttheVerticator.style.setProperty(consts.vertiColorVar, colors.verticatorregular);\n\t\t} else {\n\t\t\ttheVerticator.style.removeProperty(consts.vertiColorVar);\n\t\t}\n\t}\n}","import consts from '../consts';\nimport { findThemeColors } from './find-theme-colors';\n\n\nexport const setupColors = (theVerticator, revealElement, colors, options) => {\n\n\tconst themeColors = findThemeColors(revealElement, options.themetag ? options.themetag : 'section');\n\n\tcolors.theme = themeColors.theme;\n\tcolors.themeregular = themeColors.regular;\n\tcolors.themeinverse = themeColors.inverse;\n\tcolors.verticatorregular = options.color ? options.color : themeColors.regular;\n\tcolors.verticatorinverse = options.inversecolor ? options.inversecolor : options.oppositecolor ? options.oppositecolor : themeColors.inverse;\n\n\tif (options.debug) {\n\t\tconsole.log(`Theme regular color is: \"${colors.themeregular}\"`);\n\t\tconsole.log(`Theme inverse color is: \"${colors.themeinverse}\"`);\n\t\tif (options.color) {\n\t\t\tconsole.log(`Verticator regular color is: \"${colors.verticatorregular}\"`);\n\t\t}\n\t\tif (options.inversecolor || options.oppositecolor) {\n\t\t\tconsole.log(`Verticator inverse color is: \"${colors.verticatorinverse}\"`)\n\t\t}\n\t}\n\n\tif (options.color) {\n\t\ttheVerticator.style.setProperty(consts.vertiColorVar, colors.verticatorregular);\n\t}\n\n}","import consts from '../consts';\n\nexport const findThemeColors = (parent, tag) => {\n\tconst themeColors = {};\n\tconst colorSection = document.createElement(\"section\");\n\tconst sectionChild = document.createElement(tag);\n\tparent.getElementsByClassName('slides')[0].appendChild(colorSection).appendChild(sectionChild);\n\tthemeColors.regular = getComputedStyle(sectionChild).getPropertyValue('color');\n\tcolorSection.classList.add(consts.lightClass);\n\tthemeColors.inverse = getComputedStyle(sectionChild).getPropertyValue('color');\n\n\tif (themeColors.regular == themeColors.inverse) {\n\t\tthemeColors.theme = \"light\";\n\t\tcolorSection.classList.remove(consts.lightClass);\n\t\tcolorSection.classList.add(consts.darkClass);\n\t\tthemeColors.inverse = getComputedStyle(sectionChild).getPropertyValue('color');\n\t} else {themeColors.theme = \"dark\";}\n\tcolorSection.remove();\n\treturn themeColors;\n}","import consts from '../consts';\n\nexport const activateBullet = (event, theVerticator, options) => {\n\n\tlet listItems = Array.from(theVerticator.querySelectorAll('li'));\n\tvar bestMatch = options.indexbase - 1;\n\n\tlistItems.forEach(function(listItem, i) {\n\t\tif (parseInt(listItem.dataset.index) <= event.indexv + options.indexbase) {\n\t\t\tbestMatch = i;\n\t\t}\n\t\tlistItem.classList.remove(consts.activeclass);\n\t});\n\n\tif (bestMatch >= 0) {\n\t\tlistItems[bestMatch].classList.add(consts.activeclass);\n\t}\n};","import { debugLog } from '../helpers';\nimport { activateBullet } from './activate-bullet';\n\nexport const createBullets = (event, theVerticator, sections, options) => {\n\n\tdebugLog(options, `Creating ${sections.length} bullets`)\n\n\ttheVerticator.classList.remove('visible');\n\n\tlet listHtml = '';\n\n\tsections.forEach(function(section) {\n\t\tlet i = section[0];\n\t\tlet tooltipname = section[1];\n\t\tlet link = `href=\"#/${event.indexh + options.indexbase}/${i + options.indexbase}\"`\n\t\tlet dataname = tooltipname ? `data-name=\"${tooltipname}\"` : '';\n\t\tlet tooltip = tooltipname ? `<div class=\"tooltip\"><span>${tooltipname}</span></div>` : '';\n\t\tlistHtml += `<li data-index=\"${i + options.indexbase}\"><a ${options.clickable ? link : ''}${dataname}></a>${tooltip}</li>`;\n\t});\n\n\ttheVerticator.innerHTML = `<div class=\"verticator-holder\">${listHtml}</div>`;\n\tactivateBullet(event, theVerticator, options);\n\tsetTimeout(function() {\n\t\ttheVerticator.classList.add('visible');\n\t}, 300);\n}","export const getCurrentStackSections = (slide, options) => {\n\n\tconst ttName = (element) => {\n\t\tif (element.dataset.verticatorTooltip && (element.dataset.verticatorTooltip == \"none\" || element.dataset.verticatorTooltip == \"false\") || element.classList.contains('no-verticator-tooltip')) {\n\t\t\treturn\n\t\t} else if (options.tooltip != \"auto\" && element.getAttribute(`${options.tooltip}`)) {\n\t\t\treturn element.getAttribute(`${options.tooltip}`)\n\t\t} else if (options.tooltip == \"auto\") {\n\t\t\tfor (const attr of [\"data-verticator-tooltip\", \"data-name\", \"title\"]) {\n\t\t\t\tif (element.getAttribute(attr)) {\n\t\t\t\t\treturn element.getAttribute(attr);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const slctr of [\"h1\", \"h2\", \"h3\", \"h4\"]) {\n\t\t\t\tif (element.querySelector(slctr)) {\n\t\t\t\t\treturn element.querySelector(slctr).textContent;\n\t\t\t\t}\n\t\t\t}\n\t\t} else return false\n\t}\n\n\tlet parent = slide.parentNode;\n\t\n\tlet sections = Array.from(parent.children)\n\t.map(function(elem, index) {\n\t\treturn [index, elem];\n\t})\n\t.filter(function(indexedElem) {\n\t\tlet issection = indexedElem[1].tagName == 'SECTION' && indexedElem[1].parentNode.tagName == 'SECTION';\n\t\tlet isuncounted = options.skipuncounted && indexedElem[1].getAttribute('data-visibility') == 'uncounted';\n\t\treturn issection && !isuncounted;\n\t})\n\t.map(function(indexedElem) {\n\t\tlet ttname = '';\n\t\tif (options.tooltip) {\n\t\t\tttname = ttName(indexedElem[1]);\n\t\t}\n\t\treturn [indexedElem[0], ttname];\n\t});\n\treturn sections\n}","import { activateBullet } from \"./activate-bullet.js\";\nimport { createBullets } from \"./create-bullets.js\";\nimport { getCurrentStackSections } from \"./get-current-stack-sections.js\";\n\nexport const slideAppear = (event, deck, theVerticator, options) => {\n\n\tif (event.type == \"resize\") {\n\t\tevent.currentSlide = deck.getCurrentSlide();\n\t\tevent.indexv = (deck.getIndices()).v;\n\t}\n\n\tlet slide = event.currentSlide;\n\tlet parent = slide.parentNode;\n\n\tlet stackSections = getCurrentStackSections(slide, options);\n\n\tif (stackSections && stackSections.length) {\n\n\t\tif (stackSections.length < 2) {\n\t\t\ttheVerticator.classList.remove('visible');\n\t\t\ttheVerticator.innerHTML = '';\n\t\t} else {\n\t\t\tif (event.previousSlide) {\n\t\t\t\tlet lastParent = event.previousSlide.parentNode;\n\t\n\t\t\t\tif (parent != lastParent) {\n\t\t\t\t\tcreateBullets(event, theVerticator, stackSections, options);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcreateBullets(event, theVerticator, stackSections, options);\n\t\t\t}\n\t\t\tactivateBullet(event, theVerticator, options);\n\t\t}\n\t} else {\n\t\ttheVerticator.classList.remove('visible');\n\t\ttheVerticator.innerHTML = '';\n\t}\n};","import consts from \"./consts.js\"\n\nimport { loadResource, mergeDeep, pluginPath } from \"./helpers.js\"\n\nimport { changeVerticatorColor } from \"./functions/change-verticator-color.js\";\nimport { clickBullet } from \"./functions/click-bullet.js\";\nimport { observeStates } from \"./functions/observe-states.js\";\nimport { setScaleAndPosition } from \"./functions/scale-position.js\";\nimport { setupColors } from \"./functions/setup-colors.js\";\nimport { slideAppear } from \"./functions/slide-appear.js\";\n\nconst Plugin = () => {\n\n\tlet options = {};\n\tconst colors = {};\n\n\t/**\n\t* The main function of the plugin\n\t* @param {object} deck - The deck object\n\t* @param {object} options - The options object\n\t*/\n\tconst Verticate = function (deck, options) {\n\n\t\tlet revealElement = deck.getRevealElement();\n\t\tlet theVerticator = revealElement.querySelector('ul.verticator');\n\n\t\tlet theCurrentSlide;\n\n\t\tif (!theVerticator) {\n\t\t\tif (!options.autogenerate) return\n\t\t\tlet ul = document.createElement('ul');\n\t\t\tul.className += \"verticator\";\n\t\t\trevealElement.insertBefore(ul, revealElement.childNodes[0]);\n\t\t\ttheVerticator = revealElement.querySelector('ul.verticator');\n\t\t}\n\n\t\tif (!options.clickable) {\n\t\t\ttheVerticator.classList.add('no-click')\n\t\t}\n\n\t\tsetupColors(theVerticator, revealElement, colors, options);\n\t\tsetScaleAndPosition(deck, theVerticator, options);\n\t\tobserveStates(theVerticator, deck, colors, options);\n\n\t\tdeck.on('slidechanged', event => changeVerticatorColor(event, theVerticator, deck, colors, options));\n\n\t\tconsts.eventNames.forEach((eventname) =>\n\t\t\tdeck.on(eventname, event => {\n\t\t\t\tif (event.currentSlide !== theCurrentSlide) {\n\t\t\t\t\tslideAppear(event, deck, theVerticator, options);\n\t\t\t\t\ttheCurrentSlide = event.currentSlide;\n\t\t\t\t}\n\t\t\t})\n\t\t)\n\n\t\t/**\n\t\t* A resize may change the deck state while in scroll view, \n\t\t* so the Verticator element needs to recalculate its position and state\n\t\t*/\n\t\tlet resizeTimer;\n\t\tdeck.on(\"resize\", event => {\n\t\t\ttheVerticator.classList.add('resizing');\n\t\t\tif (resizeTimer) {\n\t\t\t\tclearTimeout(resizeTimer);\n\t\t\t}\n\t\t\tresizeTimer = setTimeout(() => {\n\n\t\t\t\tif (deck.getCurrentSlide() !== theCurrentSlide) {\n\t\t\t\t\tslideAppear(event, deck, theVerticator, options);\n\t\t\t\t}\n\n\t\t\t\ttheVerticator.classList.remove('resizing');\n\t\t\t\tresizeTimer = null;\n\t\t\t}, 500);\n\t\t});\n\n\t\tif ((deck.getConfig()).embedded) {\n\t\t\tdeck.on('click', event => {\n\t\t\t\tclickBullet(event, deck)\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t* Initialize the plugin\n\t* @param {object} deck - The deck object\n\t*/\n\tconst init = function (deck) {\n\n\t\tlet defaultOptions = {\n\t\t\tthemetag: 'h1',\n\t\t\tcolor: '',\n\t\t\tinversecolor: '',\n\t\t\tskipuncounted: false,\n\t\t\tclickable: true,\n\t\t\tposition: 'auto',\n\t\t\toffset: '3vmin',\n\t\t\tautogenerate: true,\n\t\t\ttooltip: false,\n\t\t\tscale: 1,\n\t\t\tcssautoload: true,\n\t\t\tcsspath: '',\n\t\t\tdebug: false\n\t\t};\n\n\t\toptions = mergeDeep(defaultOptions, deck.getConfig().verticator || {});\n\t\toptions.indexbase = deck.getConfig().hashOneBasedIndex ? 1 : 0;\n\n\t\tlet PluginStylePath = options.csspath.verticator ? options.csspath.verticator : options.csspath ? options.csspath : null || `${pluginPath()}verticator.css` || 'plugin/verticator/verticator.css'\n\n\t\tif (options.debug) {\n\t\t\tconsole.log(`Plugin path = ${pluginPath()}`);\n\t\t\tconsole.log(`Verticator CSS path = ${PluginStylePath}`);\n\t\t}\n\n\t\tconst generator = document.querySelector('[name=generator]');\n\t\tif (options.cssautoload && !(generator && generator.content.includes(\"quarto\"))) {\n\t\t\tloadResource(PluginStylePath, 'stylesheet');\n\t\t}\n\n\t\tVerticate(deck, options);\n\n\t};\n\n\treturn {\n\t\tid: 'verticator',\n\t\tinit: init\n\t};\n};\n\nexport default Plugin;","export const setScaleAndPosition = (deck, theVerticator, options) => {\n\n\tif (options.position == \"auto\") {\n\t\toptions.position = deck.getConfig().rtl ? \"left\" : \"right\";\n\t}\n\n\tif (options.position == 'left') {\n\t\ttheVerticator.classList.add('left');\n\t\ttheVerticator.style.left = options.offset;\n\t} else {\n\t\ttheVerticator.style.right = options.offset;\n\t}\n\n\t// Set scale\n\tlet userScale = options.scale;\n\tuserScale = (userScale > 2) ? 2 : (userScale < 0.5) ? 0.5 : userScale;\n\n\tlet revealScale = deck.getScale();\n\tlet totalScale = revealScale > 1 ? revealScale * userScale : userScale;\n\ttheVerticator.style.setProperty('--verticator-scale', totalScale.toFixed(2));\n\tlet tooltipScaleDamper = ( 1 / Math.sqrt(totalScale));\n\ttheVerticator.style.setProperty('--verticator-tooltip-scale', tooltipScaleDamper.toFixed(2));\n\n\tdeck.on('resize', event => {\n\t\trevealScale = event.scale;\n\t\ttotalScale = revealScale > 1 ? revealScale * userScale : userScale;\n\t\ttheVerticator.style.setProperty('--verticator-scale', totalScale.toFixed(2));\n\t});\n\t\n}\n\n","import consts from '../consts';\nimport { swapColors } from \"./swap-colors.js\";\n\nexport const observeStates = (theVerticator, deck, colors, options) => {\n\n\tlet revealElement = deck.getRevealElement();\n\tlet revealViewport = deck.getViewportElement();\n\n\tlet sectionState = {};\n\tsectionState.dark = revealElement.classList.contains(consts.darkClass);\n\tsectionState.light = revealElement.classList.contains(consts.lightClass);\n\tsectionState.darkParent = revealElement.classList.contains(\"darkstack\");\n\tsectionState.lightParent = revealElement.classList.contains(\"lightstack\");\n\n\t// We use an observer here, because the color-check function from the main Reveal.js does not immediately apply the classes.\n\tconst elementObserver = new MutationObserver( mutations => {\n\t\tmutations.forEach( mutation => {\n\t\t\tconst { target } = mutation;\n\n\t\t\tif (mutation.attributeName === 'class') {\n\n\t\t\t\tconst bgMutation = (theClass) => { return mutation.target.classList.contains(theClass)}\n\n\t\t\t\tlet hasLightBg = bgMutation(consts.lightClass);\n\t\t\t\tlet hasDarkBg = bgMutation(consts.darkClass);\n\t\t\t\tlet hasLightParent = bgMutation(\"lightstack\");\n\t\t\t\tlet hasDarkParent = bgMutation(\"darkstack\");\n\n\t\t\t\t// Check if there is a change in slide BG's\n\t\t\t\tif (hasLightBg || hasDarkBg) {\n\t\t\t\t\tif (sectionState.dark !== hasDarkBg || sectionState.light !== hasLightBg) {\n\n\t\t\t\t\t\tif (colors.theme == \"dark\" && sectionState.light !== hasLightBg) {\n\t\t\t\t\t\t\tsectionState.light = hasLightBg;\n\t\t\t\t\t\t\tswapColors(hasLightBg, options, colors, revealElement, theVerticator)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (colors.theme == \"light\" && sectionState.dark !== hasDarkBg) {\n\t\t\t\t\t\t\tsectionState.dark = hasDarkBg;\n\t\t\t\t\t\t\tswapColors(hasDarkBg, options, colors, revealElement, theVerticator)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (hasLightParent || hasDarkParent) {\n\n\t\t\t\t\tif (sectionState.dark !== hasDarkParent || sectionState.light !== hasLightParent) {\n\t\t\t\t\t\tif (colors.theme == \"dark\" && sectionState.light !== hasLightParent) {\n\t\t\t\t\t\t\tsectionState.light = hasLightParent;\n\t\t\t\t\t\t\tswapColors(hasLightParent, options, colors, revealElement, theVerticator)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (colors.theme == \"light\" && sectionState.dark !== hasDarkParent) {\n\t\t\t\t\t\t\tsectionState.dark = hasDarkParent;\n\t\t\t\t\t\t\tswapColors(hasDarkParent, options, colors, revealElement, theVerticator)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tsectionState.dark = false;\n\t\t\t\t\tsectionState.light = false;\n\t\t\t\t\tswapColors(false, options, colors, revealElement, theVerticator)\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\n\tconst setObserver = () => {\n\t\tif (revealViewport.classList.contains(\"reveal-scroll\")) {\n\t\t\telementObserver.observe(revealViewport, {attributes: true,  attributeFilter : ['class']});\n\t\t} else {\n\t\t\telementObserver.observe(revealElement, {attributes: true,  attributeFilter : ['class']});\n\t\t}\n\t}\n\n\tsetObserver();\n\n};","import consts from '../consts';\n\nexport const changeVerticatorColor = (event, theVerticator, deck, colors, options) => {\n\n\tlet revealElement = deck.getRevealElement();\n\n\tif (event.currentSlide.parentNode.classList.contains(\"stack\")) {\n\t\tif (event.currentSlide.parentNode.classList.contains(consts.lightClass)) {\n\t\t\trevealElement.classList.add(\"lightstack\");\n\t\t} else {\n\t\t\trevealElement.classList.remove(\"lightstack\")\n\t\t}\n\n\t\tif (event.currentSlide.parentNode.classList.contains(consts.darkClass)) {\n\t\t\trevealElement.classList.add(\"darkstack\")\n\t\t} else {\n\t\t\trevealElement.classList.remove(\"darkstack\")\n\t\t}\n\t}\n\n\tif (event.currentSlide.dataset.verticator || event.currentSlide.parentNode.dataset.verticator) {\n\n\t\tif (event.currentSlide.dataset.verticator == \"regular\" || event.currentSlide.parentNode.dataset.verticator == \"regular\") {\n\t\t\ttheVerticator.style.setProperty(consts.forceColorVar, colors.verticatorregular);\n\t\t\tif (options.debug) {\n\t\t\t\tconsole.log(`Verticator forced to: \"${colors.verticatorregular}\"`);\n\t\t\t}\n\t\t} else if (event.currentSlide.dataset.verticator == \"inverse\" || event.currentSlide.parentNode.dataset.verticator == \"inverse\") {\n\t\t\ttheVerticator.style.setProperty(consts.forceColorVar, colors.verticatorinverse);\n\t\t\tif (options.debug) {\n\t\t\t\tconsole.log(`Verticator forced to: \"${colors.verticatorinverse}\"`);\n\t\t\t}\n\t\t} else {\n\t\t\ttheVerticator.style.setProperty(consts.forceColorVar, deck.getCurrentSlide().dataset.verticator || deck.getCurrentSlide().parentNode.dataset.verticator);\n\t\t\tif (options.debug) {\n\t\t\t\tconsole.log(`Verticator forced to: \"${deck.getCurrentSlide().dataset.verticator || deck.getCurrentSlide().parentNode.dataset.verticator}\"`);\n\t\t\t}\n\t\t}\n\t} else {theVerticator.style.removeProperty(consts.forceColorVar);}\n\n};","import { getNodeIndex } from '../helpers';\n\nexport const clickBullet = (event, deck) => {\n\tif ((event.target).matches('.verticator li a')) {\n\t\tlet currIndexh = (deck.getIndices()).h;\n\t\tlet currIndexf = (deck.getIndices()).v;\n\t\tevent.preventDefault();\n\t\tlet i = getNodeIndex(event.target.parentNode);\n\t\tdeck.slide(currIndexh, i, currIndexf);\n\t}\n}"],"names":["consts","lightClass","darkClass","themeColorVar","vertiColorVar","forceColorVar","activeclass","eventNames","isObject","item","Array","isArray","mergeDeep","target","sources","length","source","shift","key","Object","assign","loadResource","url","type","callback","resource","head","document","querySelector","alreadyExists","createElement","src","rel","href","finish","call","onload","onreadystatechange","this","readyState","appendChild","pluginPath","fileName","path","pluginScript","getAttribute","slice","lastIndexOf","swapColors","needToSwap","options","colors","revealElement","theVerticator","style","setProperty","themeinverse","inversecolor","oppositecolor","verticatorinverse","removeProperty","themeregular","color","verticatorregular","setupColors","themeColors","findThemeColors","parent","tag","colorSection","sectionChild","getElementsByClassName","regular","getComputedStyle","getPropertyValue","classList","add","inverse","theme","remove","themetag","debug","console","log","activateBullet","event","listItems","from","querySelectorAll","bestMatch","indexbase","forEach","listItem","i","parseInt","dataset","index","indexv","createBullets","sections","debugLog","text","listHtml","section","tooltipname","link","indexh","dataname","tooltip","clickable","innerHTML","setTimeout","getCurrentStackSections","slide","parentNode","children","map","elem","filter","indexedElem","issection","tagName","isuncounted","skipuncounted","ttname","element","verticatorTooltip","contains","attr","slctr","textContent","ttName","slideAppear","deck","currentSlide","getCurrentSlide","getIndices","v","stackSections","previousSlide","Plugin","Verticate","theCurrentSlide","resizeTimer","getRevealElement","autogenerate","ul","className","insertBefore","childNodes","setScaleAndPosition","position","getConfig","rtl","left","offset","right","userScale","scale","revealScale","getScale","totalScale","toFixed","tooltipScaleDamper","Math","sqrt","on","observeStates","revealViewport","getViewportElement","sectionState","dark","light","darkParent","lightParent","elementObserver","MutationObserver","mutations","mutation","attributeName","bgMutation","theClass","hasLightBg","hasDarkBg","hasLightParent","hasDarkParent","observe","attributes","attributeFilter","changeVerticatorColor","verticator","eventname","clearTimeout","embedded","clickBullet","matches","currIndexh","h","currIndexf","preventDefault","elm","indexOf","id","init","cssautoload","csspath","hashOneBasedIndex","PluginStylePath","generator","content","includes"],"mappings":";;;;;;;;;;;;;;AAAA,IAAeA,EAAA,CACdC,WAAc,uBACdC,UAAa,sBACbC,cAAiB,kBACjBC,cAAiB,YACjBC,cAAiB,iBACjBC,YAAc,SACdC,WAAY,CAAC,QAAS,iBCuDhB,MAAMC,EAAYC,GAChBA,GAAwB,iBAATA,IAAsBC,MAAMC,QAAQF,GAS/CG,EAAYA,CAACC,KAAWC,KACpC,IAAKA,EAAQC,OAAQ,OAAOF,EAC5B,MAAMG,EAASF,EAAQG,QAEvB,GAAIT,EAASK,IAAWL,EAASQ,GAChC,IAAK,MAAME,KAAOF,EACbR,EAASQ,EAAOE,KACdL,EAAOK,IAAMC,OAAOC,OAAOP,EAAQ,CAAEK,CAACA,GAAM,CAAC,IAClDN,EAAUC,EAAOK,GAAMF,EAAOE,KAE9BC,OAAOC,OAAOP,EAAQ,CAAEK,CAACA,GAAMF,EAAOE,KAIzC,OAAON,EAAUC,KAAWC,EAAQ,EA8CxBO,EAAeA,CAACC,EAAKC,EAAMC,KACvC,IACIC,EADAC,EAAOC,SAASC,cAAc,QAE9BC,GAAgB,EAkBpB,GAhBa,WAATN,EACEI,SAASC,cAAe,eAAcN,OAIlCO,GAAgB,GAHxBJ,EAAWE,SAASG,cAAc,UAClCL,EAASF,KAAO,kBAChBE,EAASM,IAAMT,GAGG,eAATC,IAELI,SAASC,cAAe,cAAaN,OAIjCO,GAAgB,GAHxBJ,EAAWE,SAASG,cAAc,QAClCL,EAASO,IAAM,aACfP,EAASQ,KAAOX,KAIbO,EAAe,CACnB,MAAMK,EAASA,KACU,mBAAbV,IACXA,EAASW,OACTX,EAAW,KACX,EAEDC,EAASW,OAASF,EAClBT,EAASY,mBAAqB,WACL,WAApBC,KAAKC,YACRL,KAGFR,EAAKc,YAAYf,EAClB,GAUYgB,EAAcC,IAC1B,IAAIC,EACAC,EAAejB,SAASC,cAAe,gBAAec,OAM1D,OAJCC,EADGC,EACIA,EAAaC,aAAa,OAAOC,MAAM,GAAI,EAAKJ,EAAS3B,oBAE7CO,IAAIwB,MAAM,cAAexB,IAAIyB,YAAY,KAAO,GAE7DJ,CAAI,ECvLCK,EAAaA,CAAEC,EAAYC,EAASC,EAAQC,EAAeC,KACnEJ,GACHG,EAAcE,MAAMC,YAAYvD,EAAOG,cAAegD,EAAOK,cAEzDN,EAAQO,cAAgBP,EAAQQ,cACnCL,EAAcC,MAAMC,YAAYvD,EAAOI,cAAe+C,EAAOQ,mBAE7DN,EAAcC,MAAMM,eAAe5D,EAAOI,iBAG3CgD,EAAcE,MAAMC,YAAYvD,EAAOG,cAAegD,EAAOU,cAEzDX,EAAQY,MACXT,EAAcC,MAAMC,YAAYvD,EAAOI,cAAe+C,EAAOY,mBAE7DV,EAAcC,MAAMM,eAAe5D,EAAOI,eAE5C,ECfY4D,EAAcA,CAACX,EAAeD,EAAeD,EAAQD,KAEjE,MAAMe,ECJwBC,EAACC,EAAQC,KACvC,MAAMH,EAAc,CAAA,EACdI,EAAe1C,SAASG,cAAc,WACtCwC,EAAe3C,SAASG,cAAcsC,GAa5C,OAZAD,EAAOI,uBAAuB,UAAU,GAAG/B,YAAY6B,GAAc7B,YAAY8B,GACjFL,EAAYO,QAAUC,iBAAiBH,GAAcI,iBAAiB,SACtEL,EAAaM,UAAUC,IAAI5E,EAAOC,YAClCgE,EAAYY,QAAUJ,iBAAiBH,GAAcI,iBAAiB,SAElET,EAAYO,SAAWP,EAAYY,SACtCZ,EAAYa,MAAQ,QACpBT,EAAaM,UAAUI,OAAO/E,EAAOC,YACrCoE,EAAaM,UAAUC,IAAI5E,EAAOE,WAClC+D,EAAYY,QAAUJ,iBAAiBH,GAAcI,iBAAiB,UAC/DT,EAAYa,MAAQ,OAC5BT,EAAaU,SACNd,CAAW,EDZEC,CAAgBd,EAAeF,EAAQ8B,SAAW9B,EAAQ8B,SAAW,WAEzF7B,EAAO2B,MAAQb,EAAYa,MAC3B3B,EAAOU,aAAeI,EAAYO,QAClCrB,EAAOK,aAAeS,EAAYY,QAClC1B,EAAOY,kBAAoBb,EAAQY,MAAQZ,EAAQY,MAAQG,EAAYO,QACvErB,EAAOQ,kBAAoBT,EAAQO,aAAeP,EAAQO,aAAeP,EAAQQ,cAAgBR,EAAQQ,cAAgBO,EAAYY,QAEjI3B,EAAQ+B,QACXC,QAAQC,IAAK,4BAA2BhC,EAAOU,iBAC/CqB,QAAQC,IAAK,4BAA2BhC,EAAOK,iBAC3CN,EAAQY,OACXoB,QAAQC,IAAK,iCAAgChC,EAAOY,uBAEjDb,EAAQO,cAAgBP,EAAQQ,gBACnCwB,QAAQC,IAAK,iCAAgChC,EAAOQ,uBAIlDT,EAAQY,OACXT,EAAcC,MAAMC,YAAYvD,EAAOI,cAAe+C,EAAOY,kBAC9D,EEzBYqB,EAAiBA,CAACC,EAAOhC,EAAeH,KAEpD,IAAIoC,EAAY5E,MAAM6E,KAAKlC,EAAcmC,iBAAiB,OAC1D,IAAIC,EAAYvC,EAAQwC,UAAY,EAEpCJ,EAAUK,SAAQ,SAASC,EAAUC,GAChCC,SAASF,EAASG,QAAQC,QAAUX,EAAMY,OAAS/C,EAAQwC,YAC9DD,EAAYI,GAEbD,EAASjB,UAAUI,OAAO/E,EAAOM,YAClC,IAEImF,GAAa,GAChBH,EAAUG,GAAWd,UAAUC,IAAI5E,EAAOM,YAC3C,ECbY4F,EAAgBA,CAACb,EAAOhC,EAAe8C,EAAUjD,KLsPtCkD,EAAClD,EAASmD,KAC7BnD,EAAQ+B,OAAOC,QAAQC,IAAIkB,EAAK,EKrPpCD,CAASlD,EAAU,YAAWiD,EAASpF,kBAEvCsC,EAAcsB,UAAUI,OAAO,WAE/B,IAAIuB,EAAW,GAEfH,EAASR,SAAQ,SAASY,GACzB,IAAIV,EAAIU,EAAQ,GACZC,EAAcD,EAAQ,GACtBE,EAAQ,WAAUpB,EAAMqB,OAASxD,EAAQwC,aAAaG,EAAI3C,EAAQwC,aAClEiB,EAAWH,EAAe,cAAaA,KAAiB,GACxDI,EAAUJ,EAAe,8BAA6BA,iBAA6B,GACvFF,GAAa,mBAAkBT,EAAI3C,EAAQwC,iBAAiBxC,EAAQ2D,UAAYJ,EAAO,KAAKE,SAAgBC,QAC7G,IAEAvD,EAAcyD,UAAa,kCAAiCR,UAC5DlB,EAAeC,EAAOhC,EAAeH,GACrC6D,YAAW,WACV1D,EAAcsB,UAAUC,IAAI,UAC5B,GAAE,IAAI,ECxBKoC,EAA0BA,CAACC,EAAO/D,KAqB9C,IAAIiB,EAAS8C,EAAMC,WAkBnB,OAhBexG,MAAM6E,KAAKpB,EAAOgD,UAChCC,KAAI,SAASC,EAAMrB,GACnB,MAAO,CAACA,EAAOqB,EAChB,IACCC,QAAO,SAASC,GAChB,IAAIC,EAAsC,WAA1BD,EAAY,GAAGE,SAA6D,WAArCF,EAAY,GAAGL,WAAWO,QAC7EC,EAAcxE,EAAQyE,eAAmE,aAAlDJ,EAAY,GAAG1E,aAAa,mBACvE,OAAO2E,IAAcE,CACtB,IACCN,KAAI,SAASG,GACb,IAAIK,EAAS,GAIb,OAHI1E,EAAQ0D,UACXgB,EAjCcC,KACf,KAAIA,EAAQ9B,QAAQ+B,mBAA2D,QAArCD,EAAQ9B,QAAQ+B,mBAAoE,SAArCD,EAAQ9B,QAAQ+B,qBAAiCD,EAAQlD,UAAUoD,SAAS,yBAArK,CAEO,GAAuB,QAAnB7E,EAAQ0D,SAAqBiB,EAAQhF,aAAc,GAAEK,EAAQ0D,WACvE,OAAOiB,EAAQhF,aAAc,GAAEK,EAAQ0D,WACjC,GAAuB,QAAnB1D,EAAQ0D,QAWZ,OAAO,EAVb,IAAK,MAAMoB,IAAQ,CAAC,0BAA2B,YAAa,SAC3D,GAAIH,EAAQhF,aAAamF,GACxB,OAAOH,EAAQhF,aAAamF,GAG9B,IAAK,MAAMC,IAAS,CAAC,KAAM,KAAM,KAAM,MACtC,GAAIJ,EAAQjG,cAAcqG,GACzB,OAAOJ,EAAQjG,cAAcqG,GAAOC,WAGpB,GAiBTC,CAAOZ,EAAY,KAEtB,CAACA,EAAY,GAAIK,EACzB,GACe,ECnCHQ,EAAcA,CAAC/C,EAAOgD,EAAMhF,EAAeH,KAErC,UAAdmC,EAAM9D,OACT8D,EAAMiD,aAAeD,EAAKE,kBAC1BlD,EAAMY,OAAUoC,EAAKG,aAAcC,GAGpC,IAAIxB,EAAQ5B,EAAMiD,aACdnE,EAAS8C,EAAMC,WAEfwB,EAAgB1B,EAAwBC,EAAO/D,GAEnD,GAAIwF,GAAiBA,EAAc3H,OAElC,GAAI2H,EAAc3H,OAAS,EAC1BsC,EAAcsB,UAAUI,OAAO,WAC/B1B,EAAcyD,UAAY,OACpB,CACN,GAAIzB,EAAMsD,cAAe,CAGpBxE,GAFakB,EAAMsD,cAAczB,YAGpChB,EAAcb,EAAOhC,EAAeqF,EAAexF,EAErD,MACCgD,EAAcb,EAAOhC,EAAeqF,EAAexF,GAEpDkC,EAAeC,EAAOhC,EAAeH,EACtC,MAEAG,EAAcsB,UAAUI,OAAO,WAC/B1B,EAAcyD,UAAY,EAC3B,ECzBK8B,EAASA,KAEd,IAAI1F,EAAU,CAAA,EACd,MAAMC,EAAS,CAAA,EAOT0F,EAAY,SAAUR,EAAMnF,GAEjC,IAGI4F,EAiCAC,EApCA3F,EAAgBiF,EAAKW,mBACrB3F,EAAgBD,EAAcxB,cAAc,iBAIhD,IAAKyB,EAAe,CACnB,IAAKH,EAAQ+F,aAAc,OAC3B,IAAIC,EAAKvH,SAASG,cAAc,MAChCoH,EAAGC,WAAa,aAChB/F,EAAcgG,aAAaF,EAAI9F,EAAciG,WAAW,IACxDhG,EAAgBD,EAAcxB,cAAc,gBAC7C,CAEKsB,EAAQ2D,WACZxD,EAAcsB,UAAUC,IAAI,YAG7BZ,EAAYX,EAAeD,EAAeD,EAAQD,GCxCjBoG,EAACjB,EAAMhF,EAAeH,KAEhC,QAApBA,EAAQqG,WACXrG,EAAQqG,SAAWlB,EAAKmB,YAAYC,IAAM,OAAS,SAG5B,QAApBvG,EAAQqG,UACXlG,EAAcsB,UAAUC,IAAI,QAC5BvB,EAAcC,MAAMoG,KAAOxG,EAAQyG,QAEnCtG,EAAcC,MAAMsG,MAAQ1G,EAAQyG,OAIrC,IAAIE,EAAY3G,EAAQ4G,MACxBD,EAAaA,EAAY,EAAK,EAAKA,EAAY,GAAO,GAAMA,EAE5D,IAAIE,EAAc1B,EAAK2B,WACnBC,EAAaF,EAAc,EAAIA,EAAcF,EAAYA,EAC7DxG,EAAcC,MAAMC,YAAY,qBAAsB0G,EAAWC,QAAQ,IACzE,IAAIC,EAAuB,EAAIC,KAAKC,KAAKJ,GACzC5G,EAAcC,MAAMC,YAAY,6BAA8B4G,EAAmBD,QAAQ,IAEzF7B,EAAKiC,GAAG,UAAUjF,IACjB0E,EAAc1E,EAAMyE,MACpBG,EAAaF,EAAc,EAAIA,EAAcF,EAAYA,EACzDxG,EAAcC,MAAMC,YAAY,qBAAsB0G,EAAWC,QAAQ,GAAG,GAC3E,EDcDZ,CAAoBjB,EAAMhF,EAAeH,GEtCdqH,EAAClH,EAAegF,EAAMlF,EAAQD,KAE1D,IAAIE,EAAgBiF,EAAKW,mBACrBwB,EAAiBnC,EAAKoC,qBAEtBC,EAAe,CAAA,EACnBA,EAAaC,KAAOvH,EAAcuB,UAAUoD,SAAS/H,EAAOE,WAC5DwK,EAAaE,MAAQxH,EAAcuB,UAAUoD,SAAS/H,EAAOC,YAC7DyK,EAAaG,WAAazH,EAAcuB,UAAUoD,SAAS,aAC3D2C,EAAaI,YAAc1H,EAAcuB,UAAUoD,SAAS,cAG5D,MAAMgD,EAAkB,IAAIC,kBAAkBC,IAC7CA,EAAUtF,SAASuF,IAGlB,GAA+B,UAA3BA,EAASC,cAA2B,CAEvC,MAAMC,EAAcC,GAAsBH,EAASrK,OAAO8D,UAAUoD,SAASsD,GAE7E,IAAIC,EAAaF,EAAWpL,EAAOC,YAC/BsL,EAAYH,EAAWpL,EAAOE,WAC9BsL,EAAiBJ,EAAW,cAC5BK,EAAgBL,EAAW,aAG3BE,GAAcC,EACbb,EAAaC,OAASY,GAAab,EAAaE,QAAUU,IAEzC,QAAhBnI,EAAO2B,OAAmB4F,EAAaE,QAAUU,IACpDZ,EAAaE,MAAQU,EACrBtI,EAAWsI,EAAYpI,EAASC,EAAQC,EAAeC,IAEpC,SAAhBF,EAAO2B,OAAoB4F,EAAaC,OAASY,IACpDb,EAAaC,KAAOY,EACpBvI,EAAWuI,EAAWrI,EAASC,EAAQC,EAAeC,KAG9CmI,GAAkBC,EAExBf,EAAaC,OAASc,GAAiBf,EAAaE,QAAUY,IAC7C,QAAhBrI,EAAO2B,OAAmB4F,EAAaE,QAAUY,IACpDd,EAAaE,MAAQY,EACrBxI,EAAWwI,EAAgBtI,EAASC,EAAQC,EAAeC,IAExC,SAAhBF,EAAO2B,OAAoB4F,EAAaC,OAASc,IACpDf,EAAaC,KAAOc,EACpBzI,EAAWyI,EAAevI,EAASC,EAAQC,EAAeC,MAI5DqH,EAAaC,MAAO,EACpBD,EAAaE,OAAQ,EACrB5H,GAAW,EAAOE,EAASC,EAAQC,EAAeC,GAEpD,IACC,IAIEmH,EAAe7F,UAAUoD,SAAS,iBACrCgD,EAAgBW,QAAQlB,EAAgB,CAACmB,YAAY,EAAOC,gBAAkB,CAAC,WAE/Eb,EAAgBW,QAAQtI,EAAe,CAACuI,YAAY,EAAOC,gBAAkB,CAAC,UAInE,EF5BZrB,CAAclH,EAAegF,EAAMlF,EAAQD,GAE3CmF,EAAKiC,GAAG,gBAAgBjF,GG1CWwG,EAACxG,EAAOhC,EAAegF,EAAMlF,EAAQD,KAEzE,IAAIE,EAAgBiF,EAAKW,mBAErB3D,EAAMiD,aAAapB,WAAWvC,UAAUoD,SAAS,WAChD1C,EAAMiD,aAAapB,WAAWvC,UAAUoD,SAAS/H,EAAOC,YAC3DmD,EAAcuB,UAAUC,IAAI,cAE5BxB,EAAcuB,UAAUI,OAAO,cAG5BM,EAAMiD,aAAapB,WAAWvC,UAAUoD,SAAS/H,EAAOE,WAC3DkD,EAAcuB,UAAUC,IAAI,aAE5BxB,EAAcuB,UAAUI,OAAO,cAI7BM,EAAMiD,aAAavC,QAAQ+F,YAAczG,EAAMiD,aAAapB,WAAWnB,QAAQ+F,WAErC,WAAzCzG,EAAMiD,aAAavC,QAAQ+F,YAA+E,WAApDzG,EAAMiD,aAAapB,WAAWnB,QAAQ+F,YAC/FzI,EAAcC,MAAMC,YAAYvD,EAAOK,cAAe8C,EAAOY,mBACzDb,EAAQ+B,OACXC,QAAQC,IAAK,0BAAyBhC,EAAOY,uBAEK,WAAzCsB,EAAMiD,aAAavC,QAAQ+F,YAA+E,WAApDzG,EAAMiD,aAAapB,WAAWnB,QAAQ+F,YACtGzI,EAAcC,MAAMC,YAAYvD,EAAOK,cAAe8C,EAAOQ,mBACzDT,EAAQ+B,OACXC,QAAQC,IAAK,0BAAyBhC,EAAOQ,wBAG9CN,EAAcC,MAAMC,YAAYvD,EAAOK,cAAegI,EAAKE,kBAAkBxC,QAAQ+F,YAAczD,EAAKE,kBAAkBrB,WAAWnB,QAAQ+F,YACzI5I,EAAQ+B,OACXC,QAAQC,IAAK,0BAAyBkD,EAAKE,kBAAkBxC,QAAQ+F,YAAczD,EAAKE,kBAAkBrB,WAAWnB,QAAQ+F,gBAGxHzI,EAAcC,MAAMM,eAAe5D,EAAOK,cAAe,EHM/BwL,CAAsBxG,EAAOhC,EAAegF,EAAMlF,EAAQD,KAE3FlD,EAAOO,WAAWoF,SAASoG,GAC1B1D,EAAKiC,GAAGyB,GAAW1G,IACdA,EAAMiD,eAAiBQ,IAC1BV,EAAY/C,EAAOgD,EAAMhF,EAAeH,GACxC4F,EAAkBzD,EAAMiD,aACzB,MASFD,EAAKiC,GAAG,UAAUjF,IACjBhC,EAAcsB,UAAUC,IAAI,YACxBmE,GACHiD,aAAajD,GAEdA,EAAchC,YAAW,KAEpBsB,EAAKE,oBAAsBO,GAC9BV,EAAY/C,EAAOgD,EAAMhF,EAAeH,GAGzCG,EAAcsB,UAAUI,OAAO,YAC/BgE,EAAc,IAAI,GAChB,IAAI,IAGHV,EAAKmB,YAAayC,UACtB5D,EAAKiC,GAAG,SAASjF,II3EO6G,EAAC7G,EAAOgD,KAClC,GAAKhD,EAAMxE,OAAQsL,QAAQ,oBAAqB,CAC/C,IAAIC,EAAc/D,EAAKG,aAAc6D,EACjCC,EAAcjE,EAAKG,aAAcC,EACrCpD,EAAMkH,iBACN,IAAI1G,EZ+O+B,KAAR2G,EY/ONnH,EAAMxE,OAAOqG,YZ+OSA,WAAWC,UAAUsF,QAAQD,GY9OxEnE,EAAKpB,MAAMmF,EAAYvG,EAAGyG,EAC3B,CZ6O4BE,KY7O5B,EJqEGN,CAAY7G,EAAOgD,EAAK,KA8C3B,MAAO,CACNqE,GAAI,aACJC,KAvCY,SAAUtE,GAkBtBnF,EAAUtC,EAhBW,CACpBoE,SAAU,KACVlB,MAAO,GACPL,aAAc,GACdkE,eAAe,EACfd,WAAW,EACX0C,SAAU,OACVI,OAAQ,QACRV,cAAc,EACdrC,SAAS,EACTkD,MAAO,EACP8C,aAAa,EACbC,QAAS,GACT5H,OAAO,GAG4BoD,EAAKmB,YAAYsC,YAAc,CAAA,GACnE5I,EAAQwC,UAAY2C,EAAKmB,YAAYsD,kBAAoB,EAAI,EAE7D,IAAIC,EAAkB7J,EAAQ2J,QAAQf,WAAa5I,EAAQ2J,QAAQf,WAAa5I,EAAQ2J,QAAU3J,EAAQ2J,QAAmB,GAAEpK,qBAAgC,mCAE3JS,EAAQ+B,QACXC,QAAQC,IAAK,iBAAgB1C,OAC7ByC,QAAQC,IAAK,yBAAwB4H,MAGtC,MAAMC,EAAYrL,SAASC,cAAc,qBACrCsB,EAAQ0J,aAAiBI,GAAaA,EAAUC,QAAQC,SAAS,WACpE7L,EAAa0L,EAAiB,cAG/BlE,EAAUR,EAAMnF,IAOhB"}